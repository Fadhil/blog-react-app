name: Build and Push to Google Artifact Registry

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual triggers
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: ${{ secrets.GAR_LOCATION }} # e.g., us-central1
  REPOSITORY: ${{ secrets.GAR_REPOSITORY_NAME }} # The name of your GAR repository
  IMAGE: blog-react-app # The name of the Docker image

jobs:
  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Google Cloud SDK authentication using service account key
      # - name: 'Set up Cloud SDK'
      #   uses: 'google-github-actions/setup-gcloud@v2'
      #   with:
      #     service_account_key: ${{ secrets.GCP_SA_KEY }}
      #     project_id: ${{ secrets.GCP_PROJECT_ID }}
      #     export_default_credentials: true
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'


      # Configure Docker to use the gcloud command-line tool as a credential helper
      - name: Docker auth
        run: |
          gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      # Build the Docker image
      - name: Build
        run: |
          docker build -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }} -f Dockerfile.multi .
          docker tag ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }} ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:latest

      # Push the Docker image to Google Artifact Registry
      - name: Push
        run: |
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:latest 